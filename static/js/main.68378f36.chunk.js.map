{"version":3,"sources":["index.js"],"names":["reducer","state","action","type","concat","Object","_tmp_deploys_tmskn_ckpk78c9c008c0us81svwfmb7_source_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_5__","payload","filter","td","id","AppFunction","_useState","useState","_useState2","_tmp_deploys_tmskn_ckpk78c9c008c0us81svwfmb7_source_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_4__","value","setValue","_useReducer","useReducer","_useReducer2","todos","dispatch","console","log","removeItem","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","style","padding","name","onChange","e","txt","target","placeholder","required","onClick","item","Date","toString","map","key","bind","rootElement","React","Component","document","getElementById","ReactDOM","render"],"mappings":"ynBAKA,SAASA,EAAQC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,MACH,SAAAC,OAAAC,OAAAC,EAAA,EAAAD,CAAWJ,GAAX,CAAkBC,EAAOK,UAC3B,IAAK,SACH,OAAON,EAAMO,OAAO,SAACC,GAAD,OAAQP,EAAOK,UAAYE,EAAGC,KACpD,QACE,OAAOT,GAIb,IAAMU,EAAc,WAAM,IAAAC,EACEC,mBAAS,IADXC,EAAAT,OAAAU,EAAA,EAAAV,CAAAO,EAAA,GACjBI,EADiBF,EAAA,GACVG,EADUH,EAAA,GAAAI,EAEEC,qBAAWnB,EAAS,IAFtBoB,EAAAf,OAAAU,EAAA,EAAAV,CAAAa,EAAA,GAEjBG,EAFiBD,EAAA,GAEVE,EAFUF,EAAA,GAGxBG,QAAQC,IAAI,CAAEH,UACd,IAcMI,EAAa,SAACf,GAClBY,EAAS,CAAEnB,KAAM,SAAUI,QAASG,KAGtC,OACEgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMC,MAAO,CAAEC,QAAS,cACrCL,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,SACEzB,KAAK,OACL6B,KAAK,cACLhB,MAAOA,EACPiB,SAzBe,SAACC,GACpB,IAAMC,EAAMD,EAAEE,OAAOpB,MAChBmB,GACLlB,EAASkB,IAuBLE,YAAY,oBACZC,UAAQ,IAEVZ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeU,QAxBrB,WACd,IAAMC,EAAO,CACX9B,IAAI,IAAI+B,MAAOC,WACf1B,SAEFM,EAAS,CAAEnB,KAAM,MAAOI,QAASiC,IACjCvB,EAAS,MAkBP,OAGAS,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBACXR,EAAMsB,IAAI,SAAClC,GAAD,OACTiB,EAAAC,EAAAC,cAAA,MACEgB,IAAKnC,EAAGC,GACRmB,UAAU,qEAETpB,EAAGO,MACJU,EAAAC,EAAAC,cAAA,UACEC,UAAU,kBACVU,QAASd,EAAWoB,YAAWpC,EAAGC,KAFpC,gBAuCNoC,GA1BYC,IAAMC,UA0BJC,SAASC,eAAe,SAC5CC,IAASC,OAAO1B,EAAAC,EAAAC,cAACjB,EAAD,MAAiBmC","file":"static/js/main.68378f36.chunk.js","sourcesContent":["import React, { useState, useReducer } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"add\":\n      return [...state, action.payload];\n    case \"remove\":\n      return state.filter((td) => action.payload !== td.id);\n    default:\n      return state;\n  }\n}\n\nconst AppFunction = () => {\n  const [value, setValue] = useState(\"\");\n  const [todos, dispatch] = useReducer(reducer, []);\n  console.log({ todos });\n  const handleChange = (e) => {\n    const txt = e.target.value;\n    if (!txt) return;\n    setValue(txt);\n  };\n  const addItem = () => {\n    const item = {\n      id: new Date().toString(),\n      value\n    };\n    dispatch({ type: \"add\", payload: item });\n    setValue(\"\");\n  };\n\n  const removeItem = (id) => {\n    dispatch({ type: \"remove\", payload: id });\n  };\n\n  return (\n    <div className=\"App\" style={{ padding: \"20px 40px\" }}>\n      <h3>Simple Shopping List</h3>\n      <input\n        type=\"text\"\n        name=\"ProductName\"\n        value={value}\n        onChange={handleChange}\n        placeholder=\"add products here\"\n        required\n      />\n      <button className=\"btn btn-info\" onClick={addItem}>\n        Add\n      </button>\n      <br />\n      <ul className=\"list-group mt-3 mx-5\">\n        {todos.map((td) => (\n          <li\n            key={td.id}\n            className=\"list-group-item d-flex justify-content-between align-items-center\"\n          >\n            {td.value}\n            <button\n              className=\"btn btn-warning\"\n              onClick={removeItem.bind(this, td.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    todo: \"\"\n  };\n  handleChange = (e) => {\n    this.setState({ todo: e.target.value });\n  };\n  addItem = () => {\n    if (!this.state.todo) return;\n    const newItem = {\n      id: new Date().toString(),\n      value: this.state.todo\n    };\n    this.setState((state) => ({\n      todos: state.todos.concat(newItem),\n      todo: \"\"\n    }));\n  };\n  removeItem = (id) => {\n    this.setState((state) => ({\n      todos: state.todos.filter((td) => td.id !== id)\n    }));\n  };\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<AppFunction />, rootElement);\n"],"sourceRoot":""}